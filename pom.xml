<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dk.sdu.grp6</groupId>
    <artifactId>wave-survival-game</artifactId>
    <version>1.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>WaveSurvivalGame</name>
    <repositories>
    </repositories>

    <modules>
        <module>Core</module>
        <module>Common</module>
        <module>Player</module>
        <module>Map</module>
        <module>Zombie</module>
        <module>Weapon</module>
        <module>Collision</module>
        <module>CommonBullet</module>
        <module>InfernoAura</module>
        <module>MoveToAI</module>
        <module>WaveSystem</module>

    </modules>
    <properties>
        <java>java</java>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>        
        <maven.compiler.source>1.9</maven.compiler.source>
        <maven.compiler.target>1.9</maven.compiler.target>

        <surefire.version>3.0.0</surefire.version>
        <jacoco.version>0.8.7</jacoco.version>

        <junit.jupiter.version>5.9.1</junit.jupiter.version>
        <junit.platform.version>1.9.1</junit.platform.version>
        <mockito.core.version>5.3.1</mockito.core.version>
    </properties>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>dk.sdu.mmmi.cbse</groupId>
                <artifactId>shadedlibgdx</artifactId>
                <version>1.0.1-SNAPSHOT</version>
            </dependency>
        </dependencies>
    </dependencyManagement>    
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.version}</version>
                    <configuration>
                        <argLine>${jacocoArgLine}</argLine>
                        <excludes>
                            <exclude>**/*IntegrationTest.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <!-- JaCoCo Maven Plugin -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <propertyName>jacocoArgLine</propertyName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/coverage/jacoco.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <!-- execute the resulting project -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>${java}</executable>
                    <workingDirectory>.</workingDirectory>
                    <longModulepath>false</longModulepath>
                    <arguments>
<!--                        <argument>-XstartOnFirstThread</argument>-->
                        <argument>-Dorg.lwjgl.util.Debug=true</argument>
                        <argument>-Djava.library.path=libs</argument>
                        <argument>--module-path=mods-mvn</argument>
                        <argument>--class-path=libs/*</argument>
                        <!-- because spark.core is an automatic module and actually required,
                        monitor.observer.zero would be resolved as well and does not need
                        to be added explicitly;
                        I still wanted to do it for clarity, but for some reason that results
                        in "java.lang.module.FindException: Module monitor.observer.zero not found";
                        strange... -->
                        <!--<argument>&#45;&#45;add-modules=monitor.observer.zero</argument>-->
                        <argument>--module=Core/dk.sdu.mmmi.cbse.main.Main</argument>
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- parent project should delete 'mods-mvn' -->
            <id>parent-project</id>
            <activation>
                <file>
                    <missing>src</missing>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>3.2.0</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>mods-mvn</directory>
                                </fileset>
                                <fileset>
                                    <directory>libs</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- child projects should copy artifact into 'mods-mvn' -->
            <id>child-project</id>
            <activation>
                <file>
                    <exists>src</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.0.2</version>
                        <executions>
                            <execution>
                                <id>copy-installed</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>../mods-mvn</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>